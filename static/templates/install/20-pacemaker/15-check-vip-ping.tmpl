#!/bin/bash

BASE=$(readlink -f $(dirname $0)/)
SETENVSCRIPT=$BASE/00-set-env.sh
source $SETENVSCRIPT

start=$SECONDS

log ========================================================================
log "Check if VIP given is workable or not"
log ========================================================================

VIP={{.Spec.NFS.Server.Required.VirtualIP}}
CIDR={{.Spec.NFS.Server.Required.CIDRNetMask}}
NIC={{.Spec.NFS.Server.Required.NIC}}

# VIP used is same as physical address of the NIC --> exit. It is not virtual IP address.

log "Check if the $VIP used is same as NIC addr."
for host in {{.Spec.Nodes.Required.NamesAsList}}
do
   command="ip addr show dev $NIC"
   log Run command on $host -- $command
   RETNIC=$($SSH $host "$command" | grep 'inet ' | awk '{print $2}' | cut -f1 -d'/')
   log "Returned IP $RETNIC and VIP to be used is $VIP"
   if [ "$RETNIC" = "$VIP" ] ; then
      log "VIP=$VIP used is the NIC $NIC address."
      RC=1
      break
   fi   
   log ========================================================================
done

if [ $RC -eq 1 ] ; then
   echo "VIP used is same as the physical address of the $NIC on one of the host. 
   Exiting ..."
   exit 1
fi

log "Create $VIP and then ping. Expected result - No packet loss"
for host1 in {{.Spec.Nodes.Required.NamesAsList}}
do
   log "Create VIP on $host1"
   command="ip address add $VIP/$CIDR dev $NIC"
   log Run command on $host1 -- $command
   $SSH $host1 "$command" > /dev/null 2>&1
   if [ $? -eq 1 ] ; then
      log "Error: Unable to create VIP=$VIP on $NIC on $host1."
      RC=1
      break
   fi

   command="arping -q -U -c 3 -I $NIC $VIP"
   log Run command on $host1 -- $command
   $SSH $host1 "$command"

  echo ========================================================================
   for host2 in {{.Spec.Nodes.Required.NamesAsList}}
   do
      command="ping -c4 $VIP"
      $SSH $host2 "$command" > /dev/null 2>&1
      if [ $? -eq 0 ] ; then
         echo "$host2 $VIP ping SUCCESS"
      else
         echo "$host2 $VIP ping FAILURE"
         RC=1
      fi   
      echo ========================================================================
   done

   log "Delete VIP on $host1"
   command="ip address delete $VIP/$CIDR dev $NIC"
   log Run command on $host1 -- $command
   $SSH $host1 "$command"
   if [ $? -eq 1 ] ; then
      log "Error: Unable to delete VIP=$VIP on $NIC on $host1."
      RC=1
      break
   fi
done      

log ========================================================================
end=$SECONDS
log $0 took $((end-start)) seconds to complete
log ========================================================================
exit $RC
